import '@/styles/globals.css'
import Head from 'next/head'
import Script from 'next/script'
import { ThemeProvider, createTheme } from '@mui/material/styles';
import { appWithTranslation } from 'next-i18next';
import { Analytics } from '@vercel/analytics/react';
import { AppProvider } from '@/components/contexts/AppContext';
import '@/styles/nprogress.css'
import { Montserrat } from 'next/font/google'

const montserrat = Montserrat({
  weight: 'variable',
  subsets: ['latin'],
})

const primaryColor = '#1189c4'
const successColor = '#52b963'
const errorColor = '#ed2b2a'

const mainTheme = createTheme({
  palette: {
    primary: {
      main: primaryColor,
    },
    secondary: {
      main: '#e5e5e5'
    },
    success: {
      main: successColor
    },
    error: {
      main: errorColor
    },
    neutral: {
      main: '#ffffff',
      contrastText: '#ffffff',
    },
  },
  typography: {
    fontFamily: 'montserrat, Arial, sans-serif',
  },
})

function App(props) {
  const { Component, pageProps } = props

  return (
    <div className={montserrat.className}>
      <Head>
        <title>MRF Styles</title>
        <meta name="description" content="Generated by create next app" key='description' />
        <meta name="keywords" content="shop, t-shirts, store" key='keywords' />
        <meta name="viewport" content="width=device-width, initial-scale=1" key='viewport' />
        <meta name="referrer" content="no-referrer" key='referrer' />
        <meta name="theme-color" content={primaryColor} key='theme-color' />

        <meta property="fb:app_id" content={process.env.NEXT_PUBLIC_FACEBOOK_APP_ID} />

        <meta property="og:image" itemProp="image" content='https://mrfstyles.com/logos/circle-black.jpg' key='og:image' />

        <link rel="icon" href="/small-logo-32.ico" key='icon' type="image/x-icon" />

        <Script src="https://js.stripe.com/v3/" async></Script>
        {process.env.NEXT_PUBLIC_ENV === 'production' &&
          <script
            strategy='afterInteractive'
            async
            src={`https://www.googletagmanager.com/gtag/js?id=${process.env.NEXT_PUBLIC_GOOGLE_ANALYTICS_ID}`}
          />
        }
        {process.env.NEXT_PUBLIC_ENV === 'production' &&
          <script
            strategy='afterInteractive'
            dangerouslySetInnerHTML={{
              __html: `
              window.dataLayer = window.dataLayer || [];
              function gtag(){dataLayer.push(arguments);}
              gtag('js', new Date());
              gtag('config', '${process.env.NEXT_PUBLIC_GOOGLE_ANALYTICS_ID}', {
                page_path: window.location.pathname,
              });
              `,
            }}
          />
        }
      </Head>
      <ThemeProvider theme={mainTheme}>
        <AppProvider>
          <Component{...pageProps} />
        </AppProvider>
      </ThemeProvider>
      <Analytics mode={process.env.NEXT_PUBLIC_ENV} />
    </div>
  )
}

export default appWithTranslation(App)