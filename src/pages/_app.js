import '@/styles/globals.css'
import Head from 'next/head'
import Script from 'next/script'
import { ThemeProvider, createTheme } from '@mui/material/styles';
import MontserratRegular from '../../public/fonts/montserrat.ttf';
import DataHandler from '@/components/DataHandler'
import { useRouter } from 'next/router';
import { useEffect } from 'react';

const primaryColor = '#1189C4'

const mainTheme = createTheme({
  palette: {
    primary: {
      main: primaryColor,
    },
    secondary: {
      main: '#e5e5e5'
    },
    neutral: {
      main: '#ffffff',
      contrastText: '#ffffff',
    },
  },
  typography: {
    fontFamily: [MontserratRegular, 'Arial', 'sans-serif',
    ].join(','),
  },
})

export default function App(props) {
  const { Component, pageProps } = props
  const router = useRouter();

  useEffect(() => {
    // Verificar se ocorreu um erro durante a renderização da página
    console.log('aaa', pageProps.error)
    if (pageProps.error) {
      // Redirecionar para a página de erro personalizada
      router.push('/_error');
    }
  }, [pageProps.error, router]);

  return (
    <div>
      <Head>
        <title>MKJ Styles</title>
        <meta name="description" content="Generated by create next app" key='description' />
        <meta name="keywords" content="shop, t-shirt, store" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta name="referrer" content="no-referrer" />
        <meta name="theme-color" content={primaryColor} />

        <meta property="fb:app_id" content={process.env.NEXT_PUBLIC_FACEBOOK_APP_ID} />

        <link rel="icon" href="/logo.ico" />

        <Script src="https://js.stripe.com/v3/" async></Script>
        {process.env.NODE_ENV === 'production' &&
          <script
            strategy='afterInteractive'
            async
            src={`https://www.googletagmanager.com/gtag/js?id=${process.env.NEXT_PUBLIC_GOOGLE_ANALYTICS_ID}`}
          />
        }
        {process.env.NODE_ENV === 'production' &&
          <script
            strategy='afterInteractive'
            dangerouslySetInnerHTML={{
              __html: `
              window.dataLayer = window.dataLayer || [];
              function gtag(){dataLayer.push(arguments);}
              gtag('js', new Date());
              gtag('config', '${process.env.NEXT_PUBLIC_GOOGLE_ANALYTICS_ID}', {
                page_path: window.location.pathname,
              });
              `,
            }}
          />
        }
      </Head>
      <ThemeProvider theme={mainTheme}>
        <DataHandler pageProps={pageProps} Component={Component} primaryColor={primaryColor} router={router} />
      </ThemeProvider>
    </div>
  )
}