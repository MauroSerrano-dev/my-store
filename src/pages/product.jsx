import { withRouter } from 'next/router'
import styles from '../styles/product.module.css'
import { useEffect, useState } from 'react'
import ImagesSlider from '@/components/ImagesSlider'
import { Button } from '@mui/material'
import ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';
import CreditCardOutlinedIcon from '@mui/icons-material/CreditCardOutlined';
import Cookies from 'js-cookie';
import { CART_COOKIE } from '../../consts'
import Head from 'next/head'

export default withRouter(props => {
    const {
        session,
        cart,
        setCart,
        userCurrency,
    } = props

    const { id } = props.router.query

    const [product, setProduct] = useState()
    const [currentImgIndex, setCurrentImgIndex] = useState(0)

    useEffect(() => {
        if (id && !product)
            getProductsById(id)
    }, [id])

    function getProductsById(id) {
        const options = {
            method: 'GET',
            headers: {
                id: id
            }
        }

        fetch("/api/product", options)
            .then(response => response.json())
            .then(response => {
                console.log(response.msg)
                setProduct(response.product)
            })
            .catch(err => console.error(err))
    }

    function handleBuyNow(prod) {

        const options = {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                userId: 'userId',
                cartItems: [
                    {
                        title: prod.title,
                        image: prod.images[0].src,
                        desc: 'my product description',
                        type: prod.type,
                        id: prod.id,
                        id_printify: prod.id_printify,
                        price: prod.variants[0].price,
                        quantity: 1,
                        variant_id: prod.variants[0].id,
                    }
                ],
                cancel_url: window.location.href,
                customer: session
            })
        }

        fetch('/api/stripe', options)
            .then(response => response.json())
            .then(response => {
                window.location.href = response.url
            })
            .catch(err => console.error(err))
    }

    function handleAddToCart(productProp) {
        const mookapQuantity = 1
        const mookapVariant = 0

        const productCart = {
            id: productProp.id,
            id_printify: productProp.id_printify,
            variant_id: productProp.variants[mookapVariant].id,
            quantity: mookapQuantity,
            desc: 'item description',
            type: productProp.type,
            image: productProp.images[mookapVariant].src,
            price: productProp.variants[mookapVariant].price,
            title: productProp.title
        }

        const newCart = cart.some(prod => prod.id === productProp.id && prod.variant_id === productProp.variants[mookapVariant].id)
            ? cart.map(p => p.id === productProp.id && p.variant_id === productProp.variants[mookapVariant].id
                ? ({ ...p, quantity: p.quantity + mookapQuantity })
                : p
            )
            : cart.concat(productCart)

        setCart(newCart)

        if (session) {
            const options = {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    userId: session.id,
                    cart: newCart
                })
            }
            fetch("/api/cart", options)
                .catch(err => console.error(err))
        }
        else if (session === null) {
            Cookies.set(CART_COOKIE, JSON.stringify(newCart))
        }
    }

    return (
        <div className={styles.container}>
            {product &&
                <Head>
                    <title>{product.title}</title>
                    <meta name="description" content="Generated by create next app" />
                    <meta name="keywords" content="shop, t-shirt, store" />
                    <meta name="viewport" content="width=device-width, initial-scale=1" />
                    <meta name="referrer" content="no-referrer" />

                    {/* Meta tags Open Graph */}
                    <meta property="og:title" content={product.title} />
                    {/* <meta property="og:description" content="Generated by create next app" /> */}
                    <meta property="og:image" content={product.images[0].src} />
                    {/* <meta property="og:url" content="https://quiztimeapp.com" /> */}
                </Head>
            }
            {product &&
                <div className={styles.productContainer}>
                    <div className={styles.left}>
                        <ImagesSlider
                            images={product.images}
                            currentImgIndex={currentImgIndex}
                            setCurrentImgIndex={setCurrentImgIndex}
                        />
                    </div>
                    <div className={styles.right}>
                        <h2>{product.title}</h2>
                        <Button
                            variant='contained'
                            onClick={() => handleAddToCart(product)}
                            sx={{
                                width: '100%',
                                height: '55px'
                            }}
                        >
                            <ShoppingCartOutlinedIcon />
                            Add to Cart
                        </Button>
                        <Button
                            variant='outlined'
                            onClick={() => handleBuyNow(product)}
                            sx={{
                                width: '100%',
                                height: '55px'
                            }}
                        >
                            <CreditCardOutlinedIcon />
                            Buy Now
                        </Button>
                    </div>
                </div>
            }
        </div>
    )
})